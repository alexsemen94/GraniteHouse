@model GranitHouse.Models.ViewModel.AppointmentDetailsViewModel
@using GranitHouse.Extenstions;
@using GranitHouse.Utility
@{
    ViewData["Title"] = "Edit";
}

<h2>Create</h2>

<br />
<h2 class="text-info">Edit Appointment</h2>

<form method="post" enctype="multipart/form-data">
    <div class="p-4 border rounded row">
        <input type="hidden" asp-for="Appointments.Id" />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="col-6">
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointments.CustomerName"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Appointments.CustomerName" class="form-control" />
                </div>
                <span asp-validation-for="Appointments.CustomerName" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointments.CustomerEmail"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Appointments.CustomerEmail" class="form-control" />
                </div>
                <span asp-validation-for="Appointments.CustomerEmail" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointments.AppointmentDate"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Appointments.AppointmentDate" id="datepicker" type="tel" class="form-control" />
                </div>
                <span asp-validation-for="Appointments.AppointmentDate" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointments.AppointmentTime"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Appointments.AppointmentTime" id="timepicker" type="text" class="timepicer form-control" />
                </div>
                <span asp-validation-for="Appointments.AppointmentTime" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointments.CustomerPhoneNumber"></label>
                </div>
                <div class="col-8">
                    <input asp-for="Appointments.CustomerPhoneNumber" class="form-control" />
                </div>
                <span asp-validation-for="Appointments.CustomerPhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointments.SalesPerson"></label>
                </div>
                <div class="col-8">
                    @if (User.IsInRole(SD.AdminEndUser))
                    {
                        <input asp-for="@Model.Appointments.SalesPerson.Name" readonly class="form-control" />
                        <input asp-for="@Model.Appointments.SalesPersonId" hidden />
                    }
                    else
                    {
                        <select asp-for="@Model.Appointments.SalesPersonId" asp-items="Model.SalesPerson.ToSelectListItemString(Model.Appointments.SalesPersonId)" class="form-control"></select>
                    }
                </div>
            </div>
            <div class="form-group row">
                <div class="col-4">
                    <label asp-for="Appointments.isConfirmed"></label>
                </div>
                <div class="col-8">
                    <input type="checkbox" asp-for="Appointments.isConfirmed" class="form-control" />
                </div>
            </div>
        </div>
        <div class="col-6">
            <partial name="~/Views/Shared/_AppointmentProductDetails.cshtml" model="Model.Products" />
        </div>
        <br />
        <div class="form-group">
            <input type="submit" class="btn btn-primary" value="Update" />
            <a asp-action="Index" class="btn btn-success">Back to List</a>
        </div>
    </div>
</form>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://code.jquery.com/ui/1.12.0/jquery-ui.js"
            integrity="sha256-0YPKAwZP7Mp3ALMRVB2i8GXeEndvCq3eSl/WsAl1Ryk="
            crossorigin="anonymous"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>
    <script>
        console.log("work");
        $(function () {
            $("#datepicker").datepicker({
                minDate: +1, maxDate: "+3M"
            });
        });

        $('.timepicker').timepicker({
            timeFormat: 'h:mm p',
            interval: 60,
            minTime: '10',
            maxTime: '6:00pm',
            defaultTime: '11',
            startTime: '10:00',
            dynamic: false,
            dropdown: true,
            scrollbar: true
        });

        $(document).ready(function () {
            var appointmentTime = document.getElementById('datepicker').value;
            var splitDate = '';
            if (appointmentTime.indexOf(" ") > 0) {
                splitDate = appointmentTime.split(" ");

            }
            else {
                splitDate = appointmentTime.split("T");
            }

            var time = stplitData[i].substring(0, 5);

            if (time.slice(-1) == ":") {
                time = time.substring(0, time.length - 1);
            }

            var amPmTime = splitDate[2];
            $('#datepicker').attr('value', splitDate[0]);
            $('#timerpicker').attr('value', time + ' ' + amPmTime);
        })
    </script>
}
